# -*- coding: utf-8 -*-
"""Bitcoin_Historical_Data4_(ML).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rSIqD7RS6QtpCMk7SjPAeoDW5cGMSmMw

# Predictive Analytics - BITCOIN Historical Datasets 2018-2025

---
By: Rahmi Amilia

## 1. Business Understanding

üîç Problem Statement
Bagaimana cara memprediksi harga penutupan harian Bitcoin secara akurat dengan menggunakan data historis, agar dapat digunakan dalam pengambilan keputusan investasi atau perdagangan?

üéØ Goals
Membangun model machine learning yang mampu memprediksi harga penutupan Bitcoin (Close) berdasarkan data historis seperti Open, High, Low, dan Volume.

üí° Solution Statement
Untuk mencapai tujuan tersebut, digunakan dua pendekatan utama:

Model klasik:
* Menggunakan algoritma regresi seperti RandomForestRegressor, XGBRegressor, dan SVR untuk membangun model prediksi.

Model deep learning:
* Menggunakan algoritma LSTM (Long Short-Term Memory) yang dirancang khusus untuk menangani data berurutan atau time series, seperti pergerakan harga.

Semua model yang dibangun dievaluasi menggunakan metrik performa:

* MAE (Mean Absolute Error)

* MSE (Mean Squared Error)

* R¬≤ Score (Koefisien Determinasi)

Model dengan performa terbaik akan digunakan untuk memprediksi harga Bitcoin di masa mendatang.

## 2. Data Understanding

Dataset ini diambil dari [Kaggle: Bitcoin Historical Data](https://www.kaggle.com/datasets/mczielinski/bitcoin-historical-data). Dataset ini berisi data historis perdagangan Bitcoin dalam interval waktu tertentu.

Kumpulan data ini berisi data harga historis untuk Bitcoin (BTC/USDT) dari 1 Januari 2018 hingga saat ini. Data tersebut bersumber menggunakan API Binance, yang menyediakan data candlestick terperinci dalam empat kerangka waktu:

*   15-minute (15M)
*   1-hour (1H)
*   4-hour (4H)
*   1-day (1D)

Kumpulan data ini mencakup bidang-bidang berikut untuk setiap jangka waktu:
*   Open Time : Stempel waktu saat interval dimulai
*   Open : Harga Bitcoin di awal interval
*   High : Harga tertinggi selama interval
*   Low : Harga terendah selama interval
*   Close : Harga Bitcoin di akhir interval
*   Volume : Volume perdagangan selama interval
*   Close time : Stempel waktu saat interval ditutup
*   Quote asset volume : Total volume aset kutipan yang diperdagangkan selama interval
*   Number of trades : Jumlah perdagangan yang dieksekusi dalam interval
*   Take buy base asset volume : Volume aset dasar yang dibeli oleh taker
*   Take buy quote asset volume : Volume aset kutipan yang dibelanjakan oleh taker

Dataset ini tidak memiliki nilai kosong atau duplikat yang signifikan, dan telah diperiksa untuk korelasi antar fitur sebelum digunakan dalam pemodelan.

### 3. Import Library

Import semua library yang dibutuhkan untuk proses data preparation, visualisasi, dan pemodelan.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.ensemble import RandomForestRegressor
from xgboost import XGBRegressor
from sklearn.svm import SVR
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from keras.models import Sequential
from keras.layers import LSTM, Dense, Dropout
import warnings
warnings.filterwarnings('ignore')

"""### 4. Load Dataset
Memuat dataset historis harga Bitcoin dari file CSV. Dataset ini mencakup informasi harga, volume, dan tanggal dari tahun 2018 hingga 2025
"""

df = pd.read_csv('/content/btc_1d_data_2018_to_2025.csv')

df.head()

print(df.describe)

"""### 5. Data Cleaning & Feature Engineering"""

df['Open time'] = pd.to_datetime(df['Open time'])
df.drop(columns=['Ignore', 'Close time'], inplace=True, errors='ignore')
df['Mean_Price'] = (df['High'] + df['Low']) / 2
df.info()

print(df.columns)

print(df.tail())

df = df.dropna()

print(df.head())

"""### 6. EDA - Exploratory Data Analysis"""

print(df.info())
print(df.isnull().sum())

"""*   *info()* untuk menunjukkan bahwa semua kolom memiliki tipe data yang numerik atau datetime
*   *isnull().sum()* apakah ada missing value kalau tidak ada missing, berarti datanya bersih
"""

plt.figure(figsize=(12,6))
plt.plot(df['Open time'], df['Close'], label='Close Price')
plt.title('üìà Harga Close Bitcoin dari Waktu ke Waktu')
plt.xlabel('Waktu')
plt.ylabel('Harga (USD)')
plt.tight_layout()
plt.show()

"""*   Grafik di atas menunjukkan tren harga **Bitcoin** dari tahun ke tahun dan menunjukkan periode bullish (naik) dan bearish (turun), seperti lonjakan harga pada tahun 2021 dan penurunan berikutnya"""

plt.figure(figsize=(12,5))
plt.plot(df['Open time'], df['Volume'], label='Volume', color='orange')
plt.title('üîÅ Volume Perdagangan Bitcoin')
plt.xlabel('Waktu')
plt.ylabel('Volume (BTC)')
plt.tight_layout()
plt.show()

"""*   terlihat juga volume menunjukka seberapa aktif perdagangan Bitcoin, lonjakan volumenya terjadi ketika harga sangat naik dan sangat turun."""

plt.figure(figsize=(10, 5))
sns.histplot(df['Close'], kde=True, bins=30)
plt.title('Distribusi Harga Penutupan (Close)')
plt.xlabel('Close Price')
plt.ylabel('Frequency')
plt.show()

"""Distribusi harga penutupan Bitcoin yang divisualisasikan menunjukkan karakteristik sebagai berikut:
*   Distribusi Miring ke Kanan (Right-Skewed)

  Sebagian besar nilai harga penutupan berada di rentang rendah (sekitar 5.000 hingga 30.000), dan semakin sedikit data yang berada di rentang harga tinggi (di atas 60.000)
  menandakan bahwa mayoritas waktu dalam dataset, harga Bitcoin berada pada level yang lebih rendah dibandingkan dengan puncak harga tertinggi yang pernah tercapai
*   Puncak Histogram di Rentang 10.000‚Äì15.000

  Frekuensi paling tinggi berada pada harga penutupan sekitar 10.000‚Äì15.000, yang menunjukkan bahwa harga ini merupakan harga yang paling sering muncul dalam periode data yang digunakan

* Adanya Ekor Panjang ke Kanan

  Ekor distribusi memanjang hingga lebih dari 100.000, yang menunjukkan beberapa hari dalam data memiliki harga penutupan yang sangat tinggi. Ini kemungkinan mencerminkan masa-masa puncak harga Bitcoin seperti pada tahun 2021

* Volatilitas yang Tinggi

  Bentuk distribusi yang menyebar luas dan tidak simetris juga mengindikasikan tingkat volatilitas yang tinggi dalam harga penutupan Bitcoin, yang memang merupakan karakteristik umum dari pasar kripto


"""

numeric_cols = df.select_dtypes(include=[np.number])

plt.figure(figsize=(10,8))
sns.heatmap(numeric_cols.corr(), annot=True, cmap='coolwarm')
plt.title('Heatmap Korelasi Fitur')
plt.show()

"""*   Korelasi antara fitur nya seperti ini :
  * ***Close*** sangat berkorelasi dengan **Open**, **High**, **Low**, dan **Mean_price**
  * ***Taker Buy Volume*** juga memiliki korelasi yang cukup dengan **Volume** dan **Quote Asset Volume**

### 7. Data Preparation
Tahapan ini menyiapkan data sebelum pelatihan model, mencakup:
- Pemilihan fitur yang relevan
- Normalisasi nilai fitur
- Pembagian data menjadi training dan testing
"""

df = df[['Open', 'High', 'Low', 'Volume', 'Close']]

"""Selanjutnya, pisahkan fitur dan target"""

X = df.drop('Close', axis=1)
y = df['Close']

"""Normalisasi fitur dengan MinMaxScaler"""

scaler = MinMaxScaler()
X_scaled = scaler.fit_transform(X)

"""Bagi data menjadi data latih dan uji tanpa mengacak urutan waktu"""

X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42, shuffle=False
)

print(f"Jumlah data train: {len(X_train)}")
print(f"Jumlah data test: {len(X_test)}")

"""### 8. Model Development
Model yang digunakan dalam proyek ini adalah model Recurrent Neural Network (RNN) khususnya Long Short-Term Memory (LSTM). Alasan penggunaan LSTM adalah karena model ini cocok untuk memproses data runtun waktu seperti data harga Bitcoin yang bersifat time-series.

### Arsitektur Model
Model LSTM yang dikembangkan terdiri atas beberapa lapisan:
- **LSTM Layer**: Lapisan utama yang memproses sekuens data.
- **Dropout**: Untuk mencegah overfitting.
- **Dense Layer**: Lapisan keluaran untuk menghasilkan prediksi harga.

"""

X_train_reshaped = np.reshape(X_train, (X_train.shape[0], 1, X_train.shape[1]))
X_test_reshaped = np.reshape(X_test, (X_test.shape[0], 1, X_test.shape[1]))

model = Sequential()
model.add(LSTM(units=50, return_sequences=True, input_shape=(X_train_reshaped.shape[1], X_train_reshaped.shape[2])))
model.add(Dropout(0.2))
model.add(LSTM(units=50))
model.add(Dropout(0.2))
model.add(Dense(1))

model.compile(optimizer='adam', loss='mean_squared_error')
model.summary()

"""Model dilatih menggunakan data pelatihan selama 50 epoch untuk mempelajari pola dari data historis harga Bitcoin.

Dengan model ini, diharapkan mampu menangkap dinamika harga Bitcoin dan memberikan prediksi yang akurat berdasarkan pola historis.
"""

history = model.fit(X_train_reshaped, y_train, epochs=50, batch_size=32, validation_split=0.1, verbose=1)

"""### 9.Modeling

Cell ini akan menampilkan hasil evaluasi performa tiga model regresi yang digunakan untuk memprediksi nilai numerik seperti besar harga, nilai pasar maupun variabel kontinu.

Evaluasi dilakukan menggunaka tiga metrik, seperti :
*   ***MAE (Mean Absolute Error)***: Mengukur rata-rata absolut dari selisih antara nilai prediksi dan nilai aktual. Semakin kecil nilai MAE, semakin baik performa model
*   ***RMSE (Root Mean Squared Error)***: Mengukur akar kuadrat dari rata-rata kuadrat selisih antara prediksi dan aktual. Ini memberikan penalti lebih besar pada kesalahan besar
*   ***R¬≤ Score (Koefisien Determinasi)***: Mengukur seberapa baik model menjelaskan varians dari data. Nilai R¬≤ = 1 artinya model sangat baik, sedangkan R¬≤ < 0 menunjukkan model lebih buruk dari rata-rata.

8.1 Random Forest Regressor

Model yang terbaik berdasarkan ketiga metrik evaluasi
"""

rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)
rf_pred = rf_model.predict(X_test)

"""8.2 XGBRegressor

Yang memiliki performa mendekati Random Forest, tetapi sedikit lebih buruk
"""

xgb_model = XGBRegressor(n_estimators=100, random_state=42)
xgb_model.fit(X_train, y_train)
xgb_pred = xgb_model.predict(X_test)

"""8.3 SVR

sangat tidak direkomendasikan untuk digunakan pada dataset ini tanpa melakukan tuning
"""

svr_model = SVR(kernel='rbf', C=100)
svr_model.fit(X_train, y_train)
svr_pred = svr_model.predict(X_test)

"""### 10. Evaluation
Evaluasi model dilakukan dengan menghitung metrik error yang umum digunakan pada regresi yaitu:

*   MAE (Mean Absolute Error)
*   RMSE (Root Maen Squared Error)
* R¬≤ Score (Koefisien Determinasi)

Serta visualisasi hasil prediksi vs aktual untuk melihat seberapa baik model memprediksi harga Bitcoin.
"""

def evaluate_model(y_true, y_pred, model_name):
    mae = mean_absolute_error(y_true, y_pred)
    rmse = np.sqrt(mean_squared_error(y_true, y_pred))
    r2 = r2_score(y_true, y_pred)

    print(f" {model_name} Performance:")
    print(f"MAE: {mae:.2f}")
    print(f"RMSE: {rmse:.2f}")
    print(f"R2 Score: {r2:.2f}")
    print("-"*30)

evaluate_model(y_test, rf_pred, "Random Forest")
evaluate_model(y_test, xgb_pred, "XGBoost")
evaluate_model(y_test, svr_pred, "SVR")

"""* Hasil Evaluasi dari*** Random Fores***t memiliki performa terbaik dari ketiga model, meskipun R¬≤ hanya menunjukkan kontribusi 33% dalam menjelaskan variabilitas data
* Maupun hasil dari ***XGBoost*** juga termasuk performa yang layak, walaupun sedikit lebih buruk dibandingkan dengan Random Forest
* dan terakhir performa dari ***SVR*** sangat buruk dikarenakan R¬≤ negatif yang menandakan bahwa model tidak mampu menangkap pola data sama sekali dan lebih buruk dari prediksi rata-rata

### 11. Visualization
"""



plt.figure(figsize=(15,6))
plt.plot(y_test.values, label='Actual', color='black')
plt.plot(rf_pred, label='Random Forest Prediction')
plt.plot(xgb_pred, label='XGBoost Prediction')
plt.plot(svr_pred, label='SVR Prediction')
plt.legend()
plt.title('Perbandingan Harga Asli vs Prediksi')
plt.xlabel('Sample')
plt.ylabel('Harga Bitcoin')
plt.show()

"""Hasil dari Perbandingan Harga Asli & Prediksi
1.   Random Forest Prediction (garis biru)
  *   Kecocokan dengan data asli cukup baik pada sebagian besar area data, terutama sebelum lonjakan besar harga Bitcoin.
  *   Masih merupakan prediksi terbaik secara visual dibandingkan dua model lainnya
2.   XGBoost Prediction (garis oranye)
  *   sedikit lebih underfit di beberapa bagian
  *   pada titik pertengahan (sekitar sample ke-300), prediksi mulai melemah secara visual terhadap fluktuasi harga asli, dan itu pun cenderung "Flat"
3. SVR Prediction (garis hijau)
  *   Prediksi nya sangat jauh dari data aktual
  *   Tidak menangkap tren atau fluktuasi harga sama sekali, walupun seperti terjebak di bawah nilai rata-rata lalu kemudian menjadi stagnan
  * terlalu jelas juga bahwa model ini underfitting ekstream dan tidak cocok digunakan untuk dataset dalam kondisi saat ini
"""

sns.pairplot(df[['Open', 'High', 'Low', 'Close', 'Volume']])
plt.suptitle('Pairplot Antar Fitur Harga Bitcoin', y=1.02)
plt.show()

"""Pairplot adalah visualisasi eksploratif untuk melihat :
*   Hubungan antar variable numerik melalui scatter plot (diagram sebar)
*   Distribusi tiap variable melalui histogram (diagonal utama)

Fitur yang digunakan Pairplot:
*   'Open' : Harga saat pembukaan pasar
*   'High' : Harga tertinggi dalam satu hari
* 'Low' : Harga terendah dalam satu hari
* 'Close' : Harga penutupan
* 'Volume' : Volume transaksi (jumlah bitcoin yang diperdagangkan)

Berikut analisis Visual dari Plot:
1. Korelasi Kuat antar Harga (Open, High, Low, Close):
  *  Scatter plot antara Open, High, Low, dan Close membentuk pola linear sangat kuat
  * yang artinya, jika salah satu naik, maka yang lain cenderung ikut naik ‚Äî ini wajar dan diharapkan dalam data harga saham/kripto
  * Korelasi seperti ini mengindikasikan bahwa model tidak perlu menggunakan keempat fitur secara bersamaan kecuali dilakukan transformasi lebih lanjut (misalnya: selisih harian atau rata-rata harian)
2. Volume Tidak Berkorelasi Erat dengan Harga:
  * Scatter plot antara Volume dan harga (Open, High, Low, Close) menunjukkan sebaran acak dan tidak membentuk pola linear yang jelas
  * Menunjukkan bahwa Volume tidak memiliki korelasi langsung dengan harga, atau hubungan antara Volume dan harga bersifat non-linear atau kompleks
3. Distribusi Histogram:
  * Distribusi Open, High, Low, dan Close menunjukkan bentuk mirip, dengan konsentrasi besar di kisaran harga rendah
  * Distribusi Volume terlihat lebih menyebar dan tidak normal, yang mengindikasikan adanya outlier atau fluktuasi besar dalam volume perdagangan

"""